Ejercio1 Coche
--------------

Hacer las clases necesarias y los objetos necesarios para crear un coche. Estructura JavaBean

Ejemplo de clases:

Coche

    String marca
    String tipo
    String matricula
    String color
    Motor motor  ->      Motor
                             int cv
                             String tipoMotor
                             double consumo
    
    ArrayList<Rueda> ruedas ->>>  Rueda
                                      double pulgadas
                                      String marca

    double precio

Ejercicio 2 Herencia
--------------------

Tenemos una empresa con 3 tipos de empleados:

1- Programadores
2- Jefes de equipo
3- Directores

Todos ellos van a tener un nombre, un salario y un DNI, pero luego los Jefes de equipo y los directores van a tener propiedades particulares.
Los jefes de equipo además van a tener unos incentivos, que representan un complemento a su salario. Por otro lado, los directores van 
a tener un numero de empleados a su cargo.

Quiero que ademas los empleados se les pueda calcular el sueldo, los programadores su sueldo sera igual a su salario. Los jefes de equipo
su sueldo sera su salario mas los incentivos, y los directores sera su salario más el numero de personas a su cargo por 100.

El método Main creara varios empleados, los meterá en un array y calcular sus sueldos

Ejercicio 3 Web y HTML
----------------------

Hacer un proyecto web que tenga 2 paginas HTML

1- La primera página tendrá un bienvenida (usar las etiquetas HTML que consideréis). Tiene que salir al menos el usuarioi
y la bienvenida. Además esta pagina tendra un acceso a la siguiente página
2- Quiero que mostréis una tabla con una lista de libros/Videojuegos/peliculas que queráis. Se mostraran 5 datos
de cada entidad. Además tendrá un enlace a la página anterior

Ejercicio 4 Servlets
--------------------
Hacer un proyecto web con versión de despliegue 2.5. La web tendrá lo siguiente:

1- Una pagina html que tenga 2 cajas de texto para poner 2 numeros. Enviara la información de los 2 numeros a un
Servlet cuya misión será sumar ambos numeros. 
2- El servlet generará un pagina html resultante, mostrando la suma de ambos numeros dentro de textos resaltados
(h1)
3- Tambien se mandará información desde la primera página del nombre y los apellidos de que solicita la operación, y 
en la página resultante se mostrán ambos datos en color rojo (optitivo).

Ejercicio 5 JSPs
----------------
Hacer un proyecto web que tenga 2 paginas JSPs

1- La primera página tendrá un formulario de un pedido de una pizzeria, con los siguientes campos:

	1. Nombre del cliente
	2. Tamaño de pizza (Radio): pequeña, mediana y grande
	3. Ingredientes (CheckBox): alcaparras, piña y albaricoque.
	4. Boton procesar -> ira a la segunda pagina jsp

2- La segunda pagina mostrará todos los datos que ha elegido el cliente y calculara el precio de la pizza.
El precio de la pizza sera de base 5-> pequeña 10->mediana 15->grande. Luego se sumara 1 euro por cada
ingrediente. 

Ejercicio 6 Servlets y JSPs
---------------------------
Repetir el ejercicio 5 pero esta vez vamos a hacerlo suiendo el mvc visto en clase, o al menos, diferencias las
peticiones (que se haran en el servlet) de la vista (que será en el jsp)

Ejercicio 7
-----------
Partiendo del ejericio 6 realizar los siguientes cambios

1. Queremos tener un listado de las pizzas que ha pedidok el cliente.  Cada vez que pulsemos en calcular el precio 
de la pizza vamos a meter la pizza en una lista de pizzas dentro de un atributo de session.

2. En la página de mostrar el precio, vamos a mostrar tambien todas las pizzas que ha pedido el cliente. Para ello
recorremos el array de pizzas que hemos puesto en el atributo de session mediante librerías JSTL.

Ejercicio 8
-----------

1- Configuréis JSF en vuestro WS a partir de mi ejemplo

2- Quiero que a partir del ejercicio de la pizzeria hagáis un filtro que diga cuando se ha realizado un pedido
es decir, solo se ejecute cuando se haga la accion de pedir la pizza (por consola).

3- Poner tambien mi FiltroTiempo en el ejercicio de la pizzeria. 

Ejercicio 9
-----------
Hacer una app web con JSF que haga una calculadora. La aplicación mostrarla 2 input text en los que 
mandaremos los numeros. Tendra un output text donde mostraremos el resultado. Tambien tendrá 4 botones
para hacer los 4 tipos basicos de operaciones (suma, resta, multiplicación, division)

Nota: JSF hace conversiones basicas de manera automatica, es decir, si una propiedad la declaramos
como numerica, convertira el string que le llegue desde la petión HTTP al formato numerico

Ejercicio 10
------------
Hacer el ejercicio 7 con JSF

Ejercicio 11
------------
Continuar con el ejercicio 10, pero esta vez queremos meter alguna regla de navegación y utilizando un MB de
aplicación para saber el numero total de pizzas pedidas por todos los clientes.

Ejercicio 12
------------
A partir del ejercicio 10 o 11, meter algunas reglas de validación (por ejemplo, que el cliente este relleno o que
tengamos que seleccionar algun ingrediente). Podéis hacer este ejercicio con cualquier otro ejercicio de JSF.

Meter algún literal con i18n. No hace falta que hagaís el cambio de lenguaje, es suficiente con establecer
el lenguaje dentro del faces-config.xml. Si queréis hacer el cambio podéis copiar mi codigo.
