Ejercio1 Coche
--------------

Hacer las clases necesarias y los objetos necesarios para crear un coche. Estructura JavaBean

Ejemplo de clases:

Coche

    String marca
    String tipo
    String matricula
    String color
    Motor motor  ->      Motor
                             int cv
                             String tipoMotor
                             double consumo
    
    ArrayList<Rueda> ruedas ->>>  Rueda
                                      double pulgadas
                                      String marca

    double precio

Ejercicio 2 Herencia
--------------------

Tenemos una empresa con 3 tipos de empleados:

1- Programadores
2- Jefes de equipo
3- Directores

Todos ellos van a tener un nombre, un salario y un DNI, pero luego los Jefes de equipo y los directores van a tener propiedades particulares.
Los jefes de equipo además van a tener unos incentivos, que representan un complemento a su salario. Por otro lado, los directores van 
a tener un numero de empleados a su cargo.

Quiero que ademas los empleados se les pueda calcular el sueldo, los programadores su sueldo sera igual a su salario. Los jefes de equipo
su sueldo sera su salario mas los incentivos, y los directores sera su salario más el numero de personas a su cargo por 100.

El método Main creara varios empleados, los meterá en un array y calcular sus sueldos

Ejercicio 3 Web y HTML
----------------------

Hacer un proyecto web que tenga 2 paginas HTML

1- La primera página tendrá un bienvenida (usar las etiquetas HTML que consideréis). Tiene que salir al menos el usuarioi
y la bienvenida. Además esta pagina tendra un acceso a la siguiente página
2- Quiero que mostréis una tabla con una lista de libros/Videojuegos/peliculas que queráis. Se mostraran 5 datos
de cada entidad. Además tendrá un enlace a la página anterior

Ejercicio 4 Servlets
--------------------
Hacer un proyecto web con versión de despliegue 2.5. La web tendrá lo siguiente:

1- Una pagina html que tenga 2 cajas de texto para poner 2 numeros. Enviara la información de los 2 numeros a un
Servlet cuya misión será sumar ambos numeros. 
2- El servlet generará un pagina html resultante, mostrando la suma de ambos numeros dentro de textos resaltados
(h1)
3- Tambien se mandará información desde la primera página del nombre y los apellidos de que solicita la operación, y 
en la página resultante se mostrán ambos datos en color rojo (optitivo).

Ejercicio 5 JSPs
----------------
Hacer un proyecto web que tenga 2 paginas JSPs

1- La primera página tendrá un formulario de un pedido de una pizzeria, con los siguientes campos:

	1. Nombre del cliente
	2. Tamaño de pizza (Radio): pequeña, mediana y grande
	3. Ingredientes (CheckBox): alcaparras, piña y albaricoque.
	4. Boton procesar -> ira a la segunda pagina jsp

2- La segunda pagina mostrará todos los datos que ha elegido el cliente y calculara el precio de la pizza.
El precio de la pizza sera de base 5-> pequeña 10->mediana 15->grande. Luego se sumara 1 euro por cada
ingrediente. 

Ejercicio 6 Servlets y JSPs
---------------------------
Repetir el ejercicio 5 pero esta vez vamos a hacerlo suiendo el mvc visto en clase, o al menos, diferencias las
peticiones (que se haran en el servlet) de la vista (que será en el jsp)

Ejercicio 7
-----------
Partiendo del ejericio 6 realizar los siguientes cambios

1. Queremos tener un listado de las pizzas que ha pedidok el cliente.  Cada vez que pulsemos en calcular el precio 
de la pizza vamos a meter la pizza en una lista de pizzas dentro de un atributo de session.

2. En la página de mostrar el precio, vamos a mostrar tambien todas las pizzas que ha pedido el cliente. Para ello
recorremos el array de pizzas que hemos puesto en el atributo de session mediante librerías JSTL.

Ejercicio 8
-----------

1- Configuréis JSF en vuestro WS a partir de mi ejemplo

2- Quiero que a partir del ejercicio de la pizzeria hagáis un filtro que diga cuando se ha realizado un pedido
es decir, solo se ejecute cuando se haga la accion de pedir la pizza (por consola).

3- Poner tambien mi FiltroTiempo en el ejercicio de la pizzeria. 

Ejercicio 9
-----------
Hacer una app web con JSF que haga una calculadora. La aplicación mostrarla 2 input text en los que 
mandaremos los numeros. Tendra un output text donde mostraremos el resultado. Tambien tendrá 4 botones
para hacer los 4 tipos basicos de operaciones (suma, resta, multiplicación, division)

Nota: JSF hace conversiones basicas de manera automatica, es decir, si una propiedad la declaramos
como numerica, convertira el string que le llegue desde la petión HTTP al formato numerico

Ejercicio 10
------------
Hacer el ejercicio 7 con JSF

Ejercicio 11
------------
Continuar con el ejercicio 10, pero esta vez queremos meter alguna regla de navegación y utilizando un MB de
aplicación para saber el numero total de pizzas pedidas por todos los clientes.

Ejercicio 12
------------
A partir del ejercicio 10 o 11, meter algunas reglas de validación (por ejemplo, que el cliente este relleno o que
tengamos que seleccionar algun ingrediente). Podéis hacer este ejercicio con cualquier otro ejercicio de JSF.

Meter algún literal con i18n. No hace falta que hagaís el cambio de lenguaje, es suficiente con establecer
el lenguaje dentro del faces-config.xml. Si queréis hacer el cambio podéis copiar mi codigo.

Ejercicio 13
------------
Vamos a crear un CRUD (Create, Read, Update y Delete) o en español CLMB (Crear, Leer, Modificar y borrar) con
la entidad libro Son las 4 operaciones basicas que podemos hacer con una entidad.

El libro va a tener los siguientes atributos:

	id -> clave primaria
	isbn -> clave unica
	titulo -> no podra tener más de 100 caracteres
	autor -> no podra tener más de 150 caracteres
	precio -> tendra 5 de longitud maxima
	fechaDePublicación -> se guardará solo la fecha
	precioConDescuento -> igual que el precio pero con un decuento aplicado. Esta campo no lo 
						queremos persistir.
						
Hacer el CRUD de este objeto probando con varias casuisticas. Probar tambien que cuando no se cumple
alguna condición da una excepción al intentar hacerla.

Ejercici 14
-----------
Hacer un programa en JPA con 3 entidades, dichas entidades deben de cubrir los tipos de relaciones one to one y
one to many. Cada entidad con 2 o tres atributos

Ej: EquipoFutbol one to many con Jugador
	Jugador one to one Direccion

	EquipoFutbol -> id, nombre, nombreEstadio
	Jugador-> id, nombre, dorsal
	Historial-> id, numeroGoles, numeroTarjetasAmarillas.
	
Dar de alta algunos registros.

Ejercicio 15
------------

Basandose en mi ejemplo o en el ejercicio 14, hacer algunas consultas JPQL

1. Buscar los equipos de futbol por nombre
2. Buscar los jugadores  por dorsal
3. Buscar el total de tarjetas amarillas en el historial

Ejericio 16
-----------

Hacer un XML valido basandose en el ejercicio 1

Ejercicio 17
------------

Hacer un XSD valido para el ejercio 16

Ejericio 18
-----------

Hacer un servicio web SOAP que implemente una calculadora. La calculadora implementará los métodos:

1- Sumar: Recibe 2 numeros enteros y devuelve la suma en un numero entero
2- Restar: Recibe 2 numeros enteros y devuelve la resta en un numero entero
3- Multiplicación: Recibe 2 numeros enteros y devuelve la multiplicación en un numero long
4- División: Recibe 2 numeros enteros y devuelve la division en un numero entero

Generar el cliente para probar el servicio REST

Ejericio 19
-----------
Hacer un servicio REST que devuelva una persona en formato GSON.

1. Crear una aplicación REST y meter las librerias GSON
2. Mapear una URL para que devuelva una persona por GET

Probar la aplicación con POSTMAN (instalarlo)

Ejercicio 20
------------

Hacer un servicioi REST que implemente un GET y un POST de la entidad coche vista en clase.

El GET será por id y el POST deberá de dar de alta un coche. No hace falta hacer el DAOCoche, hacerlo
todo si queréis dentro del controlador.

Si queréis hacer todos los metodos por probar, hacerlo (GET, POST, PUT, DELETE)

Ejercicio 21
------------

1. Replicar el ejemplo de EJB de hola mundo.

2. Intentar meter un metodo más en el EJB que sume dos numeros pasados por parametro.

Ejercicio 22
------------

Hacer un proyecto web en el crearemos una pagina web mediante javascript que hagamos un formulario sencillo
que tenga 2 input text y un boton de envio. Simulando un formulario de usuario y contraseña.

Meter una función en el boton que diga mensaje enviado por consola. La función tiene que estar en un fichero.js aparte

Ejercicio 23
------------

Formulario con HTML y JS que calcule las siguiente operaciones: Suma, resta, division y multiplicación de 2 numeros. 
Potencia de un numero, el diametro de una circunferencia.

Ejericio 24
-----------

Hacer un boton en JS que cuando lo pulsemo cree botones. Tendremos otro boton, que cuando lo pulsemos eliminaremos botones

